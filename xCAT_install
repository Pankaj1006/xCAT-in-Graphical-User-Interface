#!/usr/bin/python3

import os
import subprocess
import tkinter as tk
from tkinter import messagebox
import re

def install_xCAT():
    # Checking you have root privileges or not
    if os.geteuid() != 0:
        messagebox.showerror("Error", "You need root privileges to run this script.\nPlease try again using 'sudo'. Exiting.")
    else:
        result = messagebox.askquestion("Install xCAT", "Are you sure you want to install xCAT?")
        # Checking xCAT is pre installed or not
        if result == "yes":
            os.system("systemctl stop firewalld && \
            systemctl disable firewalld && \
            setenforce 0 && \
            sed -i 's/SELINUX=permissive/SELINUX=disabled/' /etc/selinux/config")
            isFile = os.path.isfile("/etc/profile.d/xcat.sh")
            if(isFile==True):
                messagebox.showinfo("Info", "xCAT is already installed")
            else:
                os.system("wget -P /etc/yum.repos.d https://xcat.org/files/xcat/repos/yum/latest/xcat-core/xcat-core.repo && \
                wget -P /etc/yum.repos.d https://xcat.org/files/xcat/repos/yum/xcat-dep/rh8/x86_64/xcat-dep.repo && \
                dnf install xCAT -y && \
                . /etc/profile.d/xcat.sh && \
                lsxcatd -a")
                messagebox.showinfo("Success", "xCAT environment is set successfully")
        else:
            messagebox.showinfo("Operation Aborted", "Installation aborted.")

def set_hostname():
    new_hostname = hostname_entry.get()
    # Using the 'hostnamectl' command to set the new hostname
    try:
        subprocess.run(["sudo", "hostnamectl", "set-hostname", new_hostname], check=True)
        print(f"Hostname has been set to {new_hostname}")
    except subprocess.CalledProcessError:
        print("Failed to set hostname. Make sure you have the necessary privileges.")

def set_dhcp_interface():
    dhcpinterfaces = dhcp_entry.get()
    try:
        subprocess.run(["chdef", "-t", "site", f"dhcpinterfaces={dhcpinterfaces}"], check=True)
    except subprocess.CalledProcessError:
         pass  #error handling code here

def set_master_ip():
    ip_regex = r'^(\d{1,3}\.){3}\d{1,3}$'
    master = master_ip_entry.get()
    # Check if the entered IP address matches the regex pattern
    if re.match(ip_regex, master):
        try:
            subprocess.run(["chdef", "-t", "site", f"master={master}"], check=True)
        except subprocess.CalledProcessError:
            pass  #error handling code here
    else:
        print("Invalid IP address. Please enter a valid IP address.")
# GUI code hare
root = tk.Tk()
root.title("xCAT Installer")
root.minsize(700, 400)

install_button = tk.Button(root, text="Install xCAT", command=install_xCAT)
install_button.pack(pady=20)

hostname_label = tk.Label(root, text="Enter Hostname:")
hostname_label.pack()
hostname_entry = tk.Entry(root)
hostname_entry.pack()

hostname_button = tk.Button(root, text="Set Hostname", command=set_hostname)
hostname_button.pack(pady=10)

dhcp_label = tk.Label(root, text="Enter DHCP Interface:")
dhcp_label.pack()
dhcp_entry = tk.Entry(root)
dhcp_entry.pack()

dhcp_button = tk.Button(root, text="Set DHCP Interface", command=set_dhcp_interface)
dhcp_button.pack(pady=10)

master_ip_label = tk.Label(root, text="Enter Master IP:")
master_ip_label.pack()
master_ip_entry = tk.Entry(root)
master_ip_entry.pack()

master_ip_button = tk.Button(root, text="Set Master IP", command=set_master_ip)
master_ip_button.pack(pady=10)

root.mainloop()
